url <- "https://github.com/fonnesbeck/Bios6301/raw/master/datasets/haart.csv"
haart <- read.csv(url, header = TRUE, stringsAsFactors = FALSE)
haart$init.date <- as.Date(haart$init.date,"%m/%d/%y")
haart$last.visit <- as.Date(haart$last.visit,"%m/%d/%y")
haart$date.death <- as.Date(haart$date.death,"%m/%d/%y")
table(format(haart$init.date, "%Y"))
# eliminate more than 1 year of the initial visit and marked NA in the date.death
haart$indicator <- ifelse((haart$date.death - haart$init.date > 365 | is.na(haart$date.death)),0,1)
sum(haart$indicator==1)
# if NA in the date.death, use the last - init
# if
haart$follow.up <- ifelse(is.na(haart$date.death), haart$last.visit - haart$init.date,
haart$date.death - haart$init.date)
haart$follow.up[haart$follow.up > 365] <- 365
quantile(haart$follow.up)
View(haart)
View(haart)
# if NA in the date.death, use the last - init
# if
haart$follow.up <- ifelse(is.na(haart$last.visit), haart$date.death - haart$init.date,
haart$last.visit - haart$init.date)
haart$follow.up[haart$follow.up > 365] <- 365
quantile(haart$follow.up)
x <- x[order(x$id, x$dt), ]
genData <- function(n) {
if(exists(".Random.seed", envir = .GlobalEnv)) {
save.seed <- get(".Random.seed", envir= .GlobalEnv)
on.exit(assign(".Random.seed", save.seed, envir = .GlobalEnv))
} else {
on.exit(rm(".Random.seed", envir = .GlobalEnv))
}
set.seed(n)
subj <- ceiling(n / 10)
id <- sample(subj, n, replace=TRUE)
times <- as.integer(difftime(as.POSIXct("2005-01-01"), as.POSIXct("2000-01-01"), units='secs'))
dt <- as.POSIXct(sample(times, n), origin='2000-01-01')
mu <- runif(subj, 4, 10)
a1c <- unsplit(mapply(rnorm, tabulate(id), mu, SIMPLIFY=FALSE), id)
data.frame(id, dt, a1c)
}
x <- genData(500)
x <- x[order(x$id, x$dt), ]
row.names(x) <- NULL
library("lubridate")
test <- vector()
for (i in seq(nrow(x)-1)) {
test <- c(test, as.integer(difftime(x$dt[i+1], x$dt[i], units='days')/365))
}
index <- which(test > 0)
x_new <- x
for (i in index) {
if (x$id[i] == x$id[i+1]) {
temp <- as.integer(difftime(x$dt[i+1], x$dt[i], units='days')/365)
}
# create a row-size(temp) dataframe as newrow
newrow <- data.frame(matrix(nrow = temp, ncol = 3))
for (j in 1:temp) {
newrow[j, 1] <- x$id[i]
newrow[j, 2] <- as.character.Date(x$dt[i] + years(temp))
}
colnames(newrow) <- c("id","dt","a1c")
x_new <- rbind(x_new,newrow)
}
# set x_new to x back
x <- x_new
x <- x[order(x$id, x$dt), ]
row.names(x) <- NULL
sum(test)
sum(test[test>0])
knitr::opts_chunk$set(echo = TRUE)
genData <- function(n) {
if(exists(".Random.seed", envir = .GlobalEnv)) {
save.seed <- get(".Random.seed", envir= .GlobalEnv)
on.exit(assign(".Random.seed", save.seed, envir = .GlobalEnv))
} else {
on.exit(rm(".Random.seed", envir = .GlobalEnv))
}
set.seed(n)
subj <- ceiling(n / 10)
id <- sample(subj, n, replace=TRUE)
times <- as.integer(difftime(as.POSIXct("2005-01-01"), as.POSIXct("2000-01-01"), units='secs'))
dt <- as.POSIXct(sample(times, n), origin='2000-01-01')
mu <- runif(subj, 4, 10)
a1c <- unsplit(mapply(rnorm, tabulate(id), mu, SIMPLIFY=FALSE), id)
data.frame(id, dt, a1c)
}
x <- genData(500)
x <- x[order(x$id, x$dt), ]
row.names(x) <- NULL
library("lubridate")
test <- vector()
for (i in seq(nrow(x)-1)) {
test <- c(test, as.integer(difftime(x$dt[i+1], x$dt[i], units='days')/365))
}
index <- which(test > 0)
index
library("lubridate")
test <- vector()
for (i in seq(nrow(x)-1)) {
test <- c(test, as.integer(difftime(x$dt[i+1], x$dt[i], units='days')/365))
}
index <- which(test > 0)
x_new <- x
# append the new row after x_new
for (i in index) {
if (x$id[i] == x$id[i+1]) {
temp <- as.integer(difftime(x$dt[i+1], x$dt[i], units='days')/365)
}
# create a row-size(temp) dataframe as newrow
newrow <- data.frame(matrix(nrow = temp, ncol = 3))
newrow[, 1] <- x$id[i]
newrow[, 2] <- as.character.Date(x$dt[i] + years(1:temp))
colnames(newrow) <- c("id","dt","a1c")
x_new <- rbind(x_new,newrow)
}
# set x_new to x back
x <- x_new
# reorder x by id and dt
x <- x[order(x$id, x$dt), ]
row.names(x) <- NULL
View(x)
View(x)
x$visit <- 1
id_temp <- x$id[1]
for (i in 2:nrow(x)) {
# if found not the same id, change id_temp
if (x$id[i] !=  id_temp) {id_temp <- x$id[i]}
else {
x$visit[i] <- x$visit[i-1] + 1
}
}
View(x)
View(x)
for (i in 1:nrow(x)) {
if(is.na(x$a1c[i])) {
x$a1c[i] <- mean(x$a1c[which(x$id == x$id[i])], na.rm = TRUE)
}
}
id_list <- unique(x$id)
for (i in id_list) {
print(i)
print(mean(x$a1c[x$id == i]))
}
for (i in id_list) {
print(i)
print(sum(x$visit[x$id == i]))
}
for (i in id_list) {
print(i)
print(max(x$visit[x$id == i]))
}
print(x[x$id == 15, ])
for (i in id_list) {
print(max(x$visit[x$id == i]))
}
